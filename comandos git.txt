Abrir um diretorio onde deseja começar o repositório, clicar com botão direito do mouse e selecionar "Start Git Bash here".

Criação de repositorio e envio dos arquivos para o github:

1 - digita ro comando "git init" (inicia o repositorio na pasta).

2 - criar algum arquivo em python, salva-lo (estou usando este arquivo txt para testar) pode-se criar e colocar varios arquivos, fotos, txt, planilhas, etc.

3 - git add "comandos git.txt" - para adicionar o arquivo para a lista de commit (pode-se usar "git add ." para adicionar todos os arquivos)

4 - git commit -m "adicionando arquivo 'comandos git.txt' ao repositorio"

5 - Criar um repositorio no github referente a esse commit pelo link: https://github.com/new. Logo após, copie e cole o link da pagina html do repositório recém criado, neste nosso caso foi "https://github.com/Zehn1984/projeto1-devaprender".

6 - git remote add origin https://github.com/Zehn1984/projeto1-devaprender - comando git para indicar para onde os arquivos serão enviados.

7 - git push --set-upstream origin master - efetivando a transferencia dos arquivos. na segunda vez bastará apenas usar "git push". talvez seja necessario logar com browser e fazer a conexao do git ao github na primeira vez.

8 - Voltando ao link "https://github.com/Zehn1984/projeto1-devaprender", observamos que há um alerta sobre um push recente na branch "master". clicar no icone de branches "main" e selecionar a branch "master" para ver os arquivos enviados.

*** A partir dai, qualquer modificação que quiser enviar, basta seguir os passos 3, 4 e 7 novamente (git add ., git commit "msg", git push) (add, commit e push).

----------------------------------
ver versoes commitadas e voltar para versoes antigas:

git reflog

saida: {033154b (HEAD -> master, origin/master) HEAD@{0}: commit: Adicionado novas linhas de texto ao arquivo 'comandos git.txt
144da88 HEAD@{1}: commit (initial): Adicionando arquivo 'comandosgit.txt' ao repositorio}

git reset --hard 144da88 - voltar à versao anterior do codigo

git reset --hard 033154b - voltar à versao principal do codigo

----------------------------------

git branch - lista as branchs (que são como galhos do programa, ou versoes paralelas)

git branch nome - onde nome é o nome da nova branch, nesse caso, 'git branch staging'.

git checkout nome - seleciona a nova branch. a partir dai, qualquer alteração seguindo os passos 3, 4 e 7 do codigo irá para a branch 'staging'.

----------------------------------

Para fazer merge da branch master com a staging, siguiu-se os passos:

git pull master (puxar os dados atualizados da branch selecionada)

git checkout master (para garantir que estamos na branch master antes de fazer o merge)

git merge nome (onde nome é o nome da branch, neste caso git merge staging)

git push (para postar o arquivo mergido)






